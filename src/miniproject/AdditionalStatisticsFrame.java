/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package miniproject;

import java.awt.Color;
import java.awt.GridLayout;
import java.util.Vector;

/**
 *
 * @author User
 */
public class AdditionalStatisticsFrame extends javax.swing.JFrame {

        public static Vector <Team> sortedTeams=new Vector<Team>();
        public static Vector <Team>unSortedTeams=new Vector<Team>();
        int numOfTeams=0;
        String[][] results=new String [20][20];
        DirectMatchJPanel dmp=new DirectMatchJPanel();
    /**
     * Creates new form AdditionalStatisticsFrame
     */
    public AdditionalStatisticsFrame() {
        initComponents();
    }
    public AdditionalStatisticsFrame(Vector<Team> p,String[][]teamResults )
    {
        results=new String[p.size()+1][p.size()+1];
        results=teamResults;
        initComponents();
        unSortedTeams=new Vector<Team>();
        sortedTeams=new Vector<Team>();
        numOfTeams=p.size();
        for(int i=0;i<p.size();i++)
        {
            sortedTeams.add(p.get(i));
            unSortedTeams.add(p.get(i));
        }
        team1ComboBox.removeAllItems();
        for(Team team:unSortedTeams){
            String[] sArray=team.toString().split(",");
            String s=sArray[0];
            team1ComboBox.addItem(s);
        }
        team2ComboBox.removeAllItems();
        for(Team team:unSortedTeams){
            String[] sArray=team.toString().split(",");
            String s=sArray[0];
            team2ComboBox.addItem(s);
        }
        crieteriaComboBox.removeAllItems();
        String s;
        s="won statistics";
        crieteriaComboBox.addItem(s);
        s="draw statistics";
        crieteriaComboBox.addItem(s);
        s="loss statistics";
        crieteriaComboBox.addItem(s);
        s="points statistics";
        crieteriaComboBox.addItem(s); 
        additionalStatisticsPanel.setVisible(true);
        revalidate();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        directMathesPanel = new javax.swing.JPanel();
        team2ComboBox = new javax.swing.JComboBox();
        DirectMatchesButton = new javax.swing.JButton();
        directMatchesLabel = new javax.swing.JLabel();
        additionalStatisticsPanel = new javax.swing.JPanel();
        crieteriaComboBox = new javax.swing.JComboBox();
        team1ComboBox = new javax.swing.JComboBox();
        OKButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        errorLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout directMathesPanelLayout = new javax.swing.GroupLayout(directMathesPanel);
        directMathesPanel.setLayout(directMathesPanelLayout);
        directMathesPanelLayout.setHorizontalGroup(
            directMathesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 647, Short.MAX_VALUE)
        );
        directMathesPanelLayout.setVerticalGroup(
            directMathesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 114, Short.MAX_VALUE)
        );

        team2ComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        DirectMatchesButton.setText("calculate");
        DirectMatchesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DirectMatchesButtonActionPerformed(evt);
            }
        });

        directMatchesLabel.setText("Select to teams to calculate the direct matches statistics :");

        javax.swing.GroupLayout additionalStatisticsPanelLayout = new javax.swing.GroupLayout(additionalStatisticsPanel);
        additionalStatisticsPanel.setLayout(additionalStatisticsPanelLayout);
        additionalStatisticsPanelLayout.setHorizontalGroup(
            additionalStatisticsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 455, Short.MAX_VALUE)
        );
        additionalStatisticsPanelLayout.setVerticalGroup(
            additionalStatisticsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 403, Short.MAX_VALUE)
        );

        crieteriaComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        team1ComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        OKButton.setText("OK");
        OKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("choose the crieteria to calculate :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(additionalStatisticsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(crieteriaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(OKButton))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(directMathesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(101, 101, 101)
                                .addComponent(team1ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(directMatchesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(DirectMatchesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(95, 95, 95)
                                .addComponent(errorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(554, 554, 554)
                                .addComponent(team2ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(17, 17, 17)))
                .addContainerGap(111, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(directMathesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(team1ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(team2ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(directMatchesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DirectMatchesButton))
                        .addGap(18, 18, 18)
                        .addComponent(additionalStatisticsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(errorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(crieteriaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(OKButton)))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DirectMatchesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DirectMatchesButtonActionPerformed
        // TODO add your handling code here:
        int team1Index=team1ComboBox.getSelectedIndex(),team2Index=team2ComboBox.getSelectedIndex();
        if(team1Index==team2Index)
        {
            errorLabel.setForeground(Color.red);
            errorLabel.setText("please select two different teams\n hihi");
            errorLabel.setVisible(true);
            directMathesPanel.setVisible(false);
        }
        else
        {
            String match1="",match2="";
            errorLabel.setVisible(false);
            if(!results[team1Index][team2Index].isEmpty())
                match1=results[team1Index][team2Index];
            if(!results[team2Index][team1Index].isEmpty())
                match2=results[team2Index][team1Index];
            String[] tempName=unSortedTeams.get(team1Index).toString().split(",");
            String team1Name=tempName[0];
            tempName=unSortedTeams.get(team2Index).toString().split(",");
            String team2Name=tempName[0];
            directMathesPanel.removeAll();
            dmp=new DirectMatchJPanel(team1Name,team2Name,match1,match2);
            directMathesPanel.setLayout(new GridLayout(1,1,10,10));
            directMathesPanel.add(dmp);
            directMathesPanel.setVisible(true);
            this.repaint();
            revalidate();
        }
    }//GEN-LAST:event_DirectMatchesButtonActionPerformed

    private void OKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKButtonActionPerformed
        // TODO add your handling code here:
        additionalStatisticsPanel.setVisible(true);
        int cr=crieteriaComboBox.getSelectedIndex();
        Vector <Integer> crieteria= new Vector<Integer>();
        switch(cr){
            case 0:
                for(Team team: sortedTeams)
                    crieteria.add(team.gameWon);
                break;
            case 1:
                for(Team team: sortedTeams)
                    crieteria.add(team.gameDraw);
                break;
            case 2:
                for(Team team: sortedTeams)
                    crieteria.add(team.gameLoss);
                break;
            case 3:
                for(Team team: sortedTeams)
                    crieteria.add(team.points);
                break;
        }    
        additionalStatisticsPanel.removeAll();
        additionalStatisticsPanel.setLayout(new GridLayout(1,1,0,0));
        StatisticJPanel sp=new StatisticJPanel(sortedTeams,crieteria);
        sp.setVisible(true);
        additionalStatisticsPanel.add(sp);
        this.repaint();
        revalidate();
    }//GEN-LAST:event_OKButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdditionalStatisticsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdditionalStatisticsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdditionalStatisticsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdditionalStatisticsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdditionalStatisticsFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DirectMatchesButton;
    private javax.swing.JButton OKButton;
    private javax.swing.JPanel additionalStatisticsPanel;
    private javax.swing.JComboBox crieteriaComboBox;
    private javax.swing.JLabel directMatchesLabel;
    private javax.swing.JPanel directMathesPanel;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JComboBox team1ComboBox;
    private javax.swing.JComboBox team2ComboBox;
    // End of variables declaration//GEN-END:variables
}
